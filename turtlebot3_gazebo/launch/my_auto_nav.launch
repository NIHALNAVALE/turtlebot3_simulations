<?xml version="1.0" encoding="UTF-8" ?>

<launch>
  <!-- <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/> -->
  <arg name="model" default="burger"/>
  <!-- <arg name="x_pos" default="-1.0"/>
  <arg name="y_pos" default="0.5"/>
  <arg name="z_pos" default="0.0"/> -->
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="map_file" default="$(find turtlebot3_gazebo)/maps/map.yaml"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
  <arg name="cmd_vel" default="base_controller/cmd_vel"/>

  <!-- local planner DWA/TEB flag -->
  <!-- <arg name="DWA" default="true" /> -->
 
  <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch"> -->
  <include file="$(find turtlebot3_gazebo)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house2.world"/>
    <!-- <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/empty.world"/> -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  
  <!-- loading turtlbot3 model -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
	  <param name="publish_frequency" type="double" value="50.0" />
	</node>

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

<!-- Map server -->
	<!-- <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/> -->

<!-- AMCL --> 
	<!-- <include file="$(find turtlebot3_gazebo)/launch/amcl.launch">
		<arg name="initial_pose_x" value="0.0"/>
		<arg name="initial_pose_y" value="0.0"/>
		<arg name="initial_pose_a" value="0.0"/>
	</include> -->

<!-- SLAM -->
  <!-- <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch"> -->
  <include file="$(find turtlebot3_gazebo)/launch/turtlebot3_gmapping.launch">
    <arg name="model" value="$(arg model)"/>
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
  </include>

<!-- MoveBase, DWA and TEB local planners -->
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
	<remap from="cmd_vel" to="$(arg cmd_vel)"/>
    <remap from="map" to="/map"/>

    <param name="global_costmap/global_frame" value="map" />
    <param name="local_costmap/global_frame" value="map" />

	  <param name="base_global_planner" value="global_planner/GlobalPlanner" />	
	  <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
	  <!-- <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" /> -->
	  <rosparam file="$(find turtlebot3_gazebo)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
	  <rosparam file="$(find turtlebot3_gazebo)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
	  <rosparam file="$(find turtlebot3_gazebo)/config/local_costmap_params.yaml" command="load" />
	  <rosparam file="$(find turtlebot3_gazebo)/config/global_costmap_params.yaml" command="load" />
	  <rosparam file="$(find turtlebot3_gazebo)/config/move_base_params.yaml" command="load" />
	  <rosparam file="$(find turtlebot3_gazebo)/config/teb_local_planner.yaml" command="load" />
	<!-- <rosparam file="$(find turtlebot3_gazebo)/config/dwa_local_planner.yaml" command="load" /> -->
	  <remap from="cmd_vel" to="/cmd_vel" />
	  <remap from="odom" to="odom" />
	  <!-- <param name="DWAPlannerROS/min_vel_x" value="0.0" /> -->
	</node>


<!-- Goal Publisher Script -->
<!-- <node name="goal_publisher_node" pkg="turtlebot3_gazebo" type="human_track.py" output="screen"/> -->

<!-- Goal Publisher Script for Relative positions of robot and human-->
<!-- <node name="goal_publisher_node" pkg="turtlebot3_gazebo" type="robot_human_track.py" output="screen"/> -->

<!-- Rviz -->
<node type="rviz" name="rviz" pkg="rviz" args="-d $(find turtlebot3_gazebo)/rviz/turtlebot3_gazebo_model.rviz"/>
<!-- <node type="rviz" name="rviz" pkg="rviz" args="-d $(find turtlebot3_gazebo)/rviz/turtlebot3_auto_nav.rviz"/> -->

<!-- static transform publisher -->
<!-- <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="1 0 0 0 0 0 1 link1_parent link1 100" /> -->
<!-- <node pkg="turtlebot3_gazebo" type="static_tf2_broadcaster.py" name="static_tf2_broadcaster" /> -->

</launch>

